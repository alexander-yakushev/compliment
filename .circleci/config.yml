version: 2.1

defaults: &defaults
  working_directory: ~/project

executors:
  jdk8:
    docker:
      - image: clojure:temurin-8-noble
    <<: *defaults
  jdk11:
    docker:
      - image: clojure:temurin-11-noble
    <<: *defaults
  jdk17:
    docker:
      - image: clojure:temurin-17-noble
    <<: *defaults
  jdk21:
    docker:
      - image: clojure:temurin-21-noble
    <<: *defaults
  jdk24:
    docker:
      - image: clojure:temurin-24-noble
    <<: *defaults

commands:
  with_cache:
    parameters:
      steps:
        type: steps
      cache_key:
        description: Will be used as part of the cache key
        type: string
      files:
        description: Files to consider when creating the cache key
        type: string
        default: "deps.edn project.clj"
    steps:
      - run:
          name: Generate cache checksum
          command: |
            for file in deps.edn project.clj
            do
              find . -name $file -exec cat {} +
            done | sha256sum | awk '{print $1}' > /tmp/clojure_cache_seed
      - restore_cache:
          key: cache-<< parameters.cache_key >>-{{ checksum "/tmp/clojure_cache_seed" }}
      - run:
          name: Download extras
          command: |
            # Skip Codecov download if present
            [ -e /usr/local/bin/codecov ] && exit
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov
            mv codecov /usr/local/bin/codecov
      - steps: << parameters.steps >>
      - save_cache:
          paths:
            - ~/.m2
            - .cpcache
          key: cache-<< parameters.cache_key >>-{{ checksum "/tmp/clojure_cache_seed" }}

jobs:
  test:
    parameters:
      jdk_version:
        type: string
    executor: << parameters.jdk_version >>
    steps:
      - checkout
      - with_cache:
          cache_key: "test_v1"
          steps:
            - run: CLOJURE_VERSION=1.10 clojure -X:1.10:test:no-bench
            - run: CLOJURE_VERSION=1.11 clojure -X:1.11:test:no-bench
            - run: CLOJURE_VERSION=1.12 clojure -X:1.12:test
            - run: clojure -M:kondo --lint src
            - run: clojure -M:eastwood

  coverage:
    executor: jdk21
    steps:
      - checkout
      - with_cache:
          cache_key: "coverage_v2"
          steps:
            - run: CLOJURE_VERSION=1.12 clojure -M:test:coverage:1.12
            - run: codecov -f target/coverage/codecov.json -t ${CODECOV_TOKEN} -R .
            - store_artifacts:
                path: target/coverage

  test-lite:
    executor: jdk21
    steps:
      - checkout
      - with_cache:
          cache_key: "test_lite_v1"
          steps:
            - run: cd lite/ && clojure -X:test

  deploy:
    executor: jdk8
    steps:
      - checkout
      - run:
         name: Deploy
         command: clojure -T:build deploy :version \"$CIRCLE_TAG\"

run_always: &run_always
  filters:
    branches:
      only: /.*/
    tags:
      only: /.*/

workflows:
  run_all:
    jobs:
      - test:
          matrix:
            parameters:
              jdk_version: [jdk8, jdk11, jdk17, jdk21, jdk24]
          <<: *run_always
      - test-lite:
          <<: *run_always
      - coverage:
          <<: *run_always
      - deploy:
          requires:
            - test
            - test-lite
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+/
